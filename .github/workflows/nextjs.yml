name: Deploy Next.js site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # ðŸ‘‡ Force pnpm even if package.json has "packageManager": "yarn@..."
      PNPM_IGNORE_PROJECT_PACKAGE_MANAGER: "1"
      NEXT_TELEMETRY_DISABLED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Prepare pnpm
        if: steps.detect-package-manager.outputs.manager == 'pnpm'
        run: corepack prepare pnpm@latest --activate
      - name: Detect package manager (prefer pnpm)
        id: pm
        shell: bash
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "install_cmd=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=pnpm exec" >> $GITHUB_OUTPUT
          elif [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install_cmd=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install_cmd=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager" >&2
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.pm.outputs.manager }}

      # Enable Corepack and activate pnpm explicitly when chosen
      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm
        if: steps.pm.outputs.manager == 'pnpm'
        run: corepack prepare pnpm@latest --activate

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml','**/yarn.lock','**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s','**/*.[jt]sx','**/*.ts','**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml','**/yarn.lock','**/package-lock.json') }}-

      - name: Install dependencies
        run: ${{ steps.pm.outputs.manager }} ${{ steps.pm.outputs.install_cmd }}

      - name: Build
        run: ${{ steps.pm.outputs.runner }} next build

      - name: Export static site
        run: ${{ steps.pm.outputs.runner }} next export

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
